{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pootis-Bot Welcome to the Pootis-Bot docs. Click here to download Pootis-Bot Bot Features Some current features that the bot can do. More feature are planed to be added Multi Server Capablitys Seprate Server Settings Moderation User Accounts Music Service (Plays from youtube) Google, Youtube and Giphy search support Notes Pootis-Bot is an open-source Discord Bot using Discord .NET licensed under the MIT license I will not host the bot for you, you will have to host the bot yourself! If you want to host the bot your self for public use you can though Pootis-Bot was desgined for MY server, but it is multi servers compatable. I also recommend that you disable the audio services due to the fact that the audio services use a lot of resources and are a farly expermental feature. Quick Links Here are some quick links Building Windows Pootis-Bot Commands","title":"Home"},{"location":"#pootis-bot","text":"Welcome to the Pootis-Bot docs. Click here to download Pootis-Bot","title":"Pootis-Bot"},{"location":"#bot-features","text":"Some current features that the bot can do. More feature are planed to be added Multi Server Capablitys Seprate Server Settings Moderation User Accounts Music Service (Plays from youtube) Google, Youtube and Giphy search support","title":"Bot Features"},{"location":"#notes","text":"Pootis-Bot is an open-source Discord Bot using Discord .NET licensed under the MIT license I will not host the bot for you, you will have to host the bot yourself! If you want to host the bot your self for public use you can though Pootis-Bot was desgined for MY server, but it is multi servers compatable. I also recommend that you disable the audio services due to the fact that the audio services use a lot of resources and are a farly expermental feature.","title":"Notes"},{"location":"#quick-links","text":"Here are some quick links Building Windows Pootis-Bot Commands","title":"Quick Links"},{"location":"download/","text":"Downloads Source Code Pootis-Bot Source Code Full Releases These are the full compiled versions of Pootis-Bot Download Latest Version All Versions are here!","title":"Downloads"},{"location":"download/#downloads","text":"","title":"Downloads"},{"location":"download/#source-code","text":"Pootis-Bot Source Code","title":"Source Code"},{"location":"download/#full-releases","text":"These are the full compiled versions of Pootis-Bot Download Latest Version All Versions are here!","title":"Full Releases"},{"location":"server-setup/","text":"Everything in the Server Setup section should help you get Pootis-Bot working for your server! The Server Setup commands all require that the server's owner runs the commands! Use the setup command to get info about your server's setup info! REMEMBER TO ADD PERMISSIONS TO THE COMMANDS warn , makewarnable AND makenotwarnable , OTHER WISE MEMBERS WILL ABUSE THIS!","title":"Server Setup"},{"location":"commands/console-commands/","text":"Console Commands You only need these commands if you hosting the bot. A current list of console commands that Pootis-Bot can do. These commands cannot be run via Discord. They must be run through the console. Command Summary exit Shutdowns the bot config Enters the bots config setgame Sets the bot's game status deletemusic Deletes all the current bot's music toggleaudio Toggels between wether audio services are enabled or disabled about About screen for Pootis-Bot version Gets the version of Pootis-Bot you are using togglestream Sets the bots status to streaming More commands are expected to be added.","title":"Console Commands"},{"location":"commands/console-commands/#console-commands","text":"You only need these commands if you hosting the bot. A current list of console commands that Pootis-Bot can do. These commands cannot be run via Discord. They must be run through the console. Command Summary exit Shutdowns the bot config Enters the bots config setgame Sets the bot's game status deletemusic Deletes all the current bot's music toggleaudio Toggels between wether audio services are enabled or disabled about About screen for Pootis-Bot version Gets the version of Pootis-Bot you are using togglestream Sets the bots status to streaming More commands are expected to be added.","title":"Console Commands"},{"location":"commands/discord-commands/","text":"Discord Commands A current list of commands that Pootis-Bot can do. Some features are not quite done yet. Basic Commands Command Summary Alias hello Displays the hello message None hasrole Checks if user has a role None reminds Reminds you, duh (In seconds) res Fun Commands Command Summary Alias youtube [search] Searches youtube yt google [search] Searches google g giphy [search] Searches giphy gy Misc Commands Command Summary Alias pick [option 1] | [option 2] Picks between two things None roll [min] [max] Roles between 0 and 50 or between two custom number None embedmessage [title] [message] Displays your message in an embed message embed server Gets details about the server you are in None ping Ping Pong! None Profile Mangament Commands Command Summary Alias makenotwarnable [user] Makes the user not warnable None makewarnable [user] Makes the user warnable None warn [user] Warns the user None profile [user] Gets your or other's profile None profilemsg [Message] Sets your custom profile message None Music Commands Command Summary Alias join Joins in the current voice channel you are in None leave Leaves the current voice channel thats it in None play [song] Plays a song None stop Stops the current playing song None pause Pauses the current song None","title":"Discord Commands"},{"location":"commands/discord-commands/#discord-commands","text":"A current list of commands that Pootis-Bot can do. Some features are not quite done yet.","title":"Discord Commands"},{"location":"commands/discord-commands/#basic-commands","text":"Command Summary Alias hello Displays the hello message None hasrole Checks if user has a role None reminds Reminds you, duh (In seconds) res","title":"Basic Commands"},{"location":"commands/discord-commands/#fun-commands","text":"Command Summary Alias youtube [search] Searches youtube yt google [search] Searches google g giphy [search] Searches giphy gy","title":"Fun Commands"},{"location":"commands/discord-commands/#misc-commands","text":"Command Summary Alias pick [option 1] | [option 2] Picks between two things None roll [min] [max] Roles between 0 and 50 or between two custom number None embedmessage [title] [message] Displays your message in an embed message embed server Gets details about the server you are in None ping Ping Pong! None","title":"Misc Commands"},{"location":"commands/discord-commands/#profile-mangament-commands","text":"Command Summary Alias makenotwarnable [user] Makes the user not warnable None makewarnable [user] Makes the user warnable None warn [user] Warns the user None profile [user] Gets your or other's profile None profilemsg [Message] Sets your custom profile message None","title":"Profile Mangament Commands"},{"location":"commands/discord-commands/#music-commands","text":"Command Summary Alias join Joins in the current voice channel you are in None leave Leaves the current voice channel thats it in None play [song] Plays a song None stop Stops the current playing song None pause Pauses the current song None","title":"Music Commands"},{"location":"dev/building/","text":"Building Pootis-Bot These instructions should help you build Pootis-Bot. If already know how to build for dotnet core then you should be fine and probably don't have to read this. Prerequisites .NET Core 2.2 Building For Windows To build for windows you first need to navigate were the Pootis-Bot.csproj file is. Then open the command prompt. (Tip: In the navigation bar were it says c:\\ type in cmd to open the command line there) Once at the command line type in: dotnet publish -c Release -r win-x64 This will build Pootis-Bot for Windows x64. If you want it for Windows 32bit, you would replace win-x64 with win-x86 . Once it is complete, head into bin\\Release\\netcoreapp2.2\\win-x64\\publish\\ . You can copy everything in the publish folder to were you like. DO NOT USE THE EXE IN THE \\win-x64\\ FOLDER. They may look correct but it isn't correct. If you try to run it on a seprate computer it won't work. Just use the exe in the publish folder. You can now run Pootis-Bot from the Pootis-Bot.exe file. Everything should work fine as it was developed on Windows for Windows. Building For Linux Quick Note. I am not really a Linux user, I use Windows but I have used Linux in the past. Another note is that, yes, Pootis-Bot runs on the Rasberry Pi. To building Pootis-Bot for Linux is very similar to Windows. Open the terminal and navigate to were Pootis-Bot.csproj file is. Once at the directory were Pootis-Bot.csproj file is, type in the following command: dotnet publish -c Release -r linux-x64` This will build Pootis-Bot for Linux 64bit, currently .NET Core doesn't support Linux 32bit. Once done, the files should be located in bin\\Release\\netcoreapp2.2\\linux-x64\\publish\\ . Once again, use the files in the publish folder. If using the Linux version, audio service wll NOT work! This is due to that ffmpeg and youtube-dl are a windows version, if you replace this with Linux versions and made sure there main part is in the External folder it should work but is untested! Building For MacOS Ok, so I don't use MacOs, at all. I only used it in for 1 term at school and that was for a music project. Everything here is untested! To building Pootis-Bot for Mac it should be very similar to Windows and Linux. Open the terminal and navigate to were Pootis-Bot.csproj file is. Once at the directory were Pootis-Bot.csproj file is, type in the following command: dotnet publish -c Release -r osx-x64 This will build Pootis-Bot for MacOS 64bit, currently .NET Core doesn't support MacOS 32bit. The minimum OS version is MacOs 10.12 Sierra! Once done, the files should be located in bin\\Release\\netcoreapp2.2\\osx-x64\\publish\\ . Once again, use the files in the publish folder. If using the MacOS version, audio service wll NOT work! Its the exact same issue with Linux.","title":"Building Pootis-Bot"},{"location":"dev/building/#building-pootis-bot","text":"These instructions should help you build Pootis-Bot. If already know how to build for dotnet core then you should be fine and probably don't have to read this.","title":"Building Pootis-Bot"},{"location":"dev/building/#prerequisites","text":".NET Core 2.2","title":"Prerequisites"},{"location":"dev/building/#building-for-windows","text":"To build for windows you first need to navigate were the Pootis-Bot.csproj file is. Then open the command prompt. (Tip: In the navigation bar were it says c:\\ type in cmd to open the command line there) Once at the command line type in: dotnet publish -c Release -r win-x64 This will build Pootis-Bot for Windows x64. If you want it for Windows 32bit, you would replace win-x64 with win-x86 . Once it is complete, head into bin\\Release\\netcoreapp2.2\\win-x64\\publish\\ . You can copy everything in the publish folder to were you like. DO NOT USE THE EXE IN THE \\win-x64\\ FOLDER. They may look correct but it isn't correct. If you try to run it on a seprate computer it won't work. Just use the exe in the publish folder. You can now run Pootis-Bot from the Pootis-Bot.exe file. Everything should work fine as it was developed on Windows for Windows.","title":"Building For Windows"},{"location":"dev/building/#building-for-linux","text":"Quick Note. I am not really a Linux user, I use Windows but I have used Linux in the past. Another note is that, yes, Pootis-Bot runs on the Rasberry Pi. To building Pootis-Bot for Linux is very similar to Windows. Open the terminal and navigate to were Pootis-Bot.csproj file is. Once at the directory were Pootis-Bot.csproj file is, type in the following command: dotnet publish -c Release -r linux-x64` This will build Pootis-Bot for Linux 64bit, currently .NET Core doesn't support Linux 32bit. Once done, the files should be located in bin\\Release\\netcoreapp2.2\\linux-x64\\publish\\ . Once again, use the files in the publish folder. If using the Linux version, audio service wll NOT work! This is due to that ffmpeg and youtube-dl are a windows version, if you replace this with Linux versions and made sure there main part is in the External folder it should work but is untested!","title":"Building For Linux"},{"location":"dev/building/#building-for-macos","text":"Ok, so I don't use MacOs, at all. I only used it in for 1 term at school and that was for a music project. Everything here is untested! To building Pootis-Bot for Mac it should be very similar to Windows and Linux. Open the terminal and navigate to were Pootis-Bot.csproj file is. Once at the directory were Pootis-Bot.csproj file is, type in the following command: dotnet publish -c Release -r osx-x64 This will build Pootis-Bot for MacOS 64bit, currently .NET Core doesn't support MacOS 32bit. The minimum OS version is MacOs 10.12 Sierra! Once done, the files should be located in bin\\Release\\netcoreapp2.2\\osx-x64\\publish\\ . Once again, use the files in the publish folder. If using the MacOS version, audio service wll NOT work! Its the exact same issue with Linux.","title":"Building For MacOS"},{"location":"download/all/","text":"","title":"All"},{"location":"server-setup/perm-system/","text":"Permission System Pootis Bot includes a permission system. Setting a permission Set a permission for a command using these command: perm [Command] [Role] The command must be the exact spelling of the command and same goes for the role, exempt that must be a role that exist on your server. EG: perm youtube Admin Removing a permission Removing a permission is simple, type: perm [Command] Remove This will remove the permission.","title":"Permission System"},{"location":"server-setup/perm-system/#permission-system","text":"Pootis Bot includes a permission system.","title":"Permission System"},{"location":"server-setup/perm-system/#setting-a-permission","text":"Set a permission for a command using these command: perm [Command] [Role] The command must be the exact spelling of the command and same goes for the role, exempt that must be a role that exist on your server. EG: perm youtube Admin","title":"Setting a permission"},{"location":"server-setup/perm-system/#removing-a-permission","text":"Removing a permission is simple, type: perm [Command] Remove This will remove the permission.","title":"Removing a permission"},{"location":"server-setup/rulereaction/","text":"Pootis-Bot comes with a rule reaction system. Example: A new user would join your server but they would have to first react to a message with a spefic emoji. Setup Message First off you would need a message. This message can be from anyone in anyware. It can even be a embed message say from the command embed that bot features. It is recommand to have this message in its own channel say maybe, I don't A #rules channel that basiclly any public server has, with permission that no on (except you of course) can write to it, but can still react in it (important). Now you need to get the message ID. Follow this guide to learn how get into developer mode. Once you have done that, go to the top-right corner and see were the reaction symbol is, next to it there is those 3 little dots, click on them then click on Copy ID. Once you got that ID run the command: setuprulesmessage [ID] But instead of [ID] you would put the ID we copyed. Example: setuprulesmessage 487951616666763274 Choosing an emoji Once you have done that now its time for our emoji. Go to this site and pick out an emoji. For this example I will choose \ud83d\ude04(grinning face with smiling eyes) After that you need to run setupruleemoji [emoji] So mine would be setupruleemoji \ud83d\ude04 The emoji can't be the one in the Discord format, it must be unicode! \ud83d\ude04 would acually be :simle: in Discord but due to way the bot works :simle: won't work! The bot does check for this and will tell you! It is allso a good idea to put in that message that you need to react to this message with this emoji. E.G: React with \ud83d\ude04 to gain access to the server once you have read the rules! Setting up an role The second last thing is to set up a role. Create a new role like normal, but make it like a generic role. So you know something like that normally only normal people get. Now save that and change the @everyone role to only access certain channels, say only the #welcome channel and the #rules channel (The one with the message) and allow them to react in the #rules channel(or whatever its called for you) Make sure to allow the new role to access the channel you want them to! This example it will be called Member Once you have your role done that do the command: setuprulerole [role] Example: setuprulerole Member Enabling / Disabling rule reaction To enable the rule reaction feature, you need to have done the previous steps, after that do the command: togglerulereaction Assuming everything is correct it all should work. If a new user joins that should only have access to the channels that you specified until they react on that message with that specific emoji. If you want to disable this feature just run the same command again.","title":"Rule Reaction System"},{"location":"server-setup/rulereaction/#setup","text":"","title":"Setup"},{"location":"server-setup/rulereaction/#message","text":"First off you would need a message. This message can be from anyone in anyware. It can even be a embed message say from the command embed that bot features. It is recommand to have this message in its own channel say maybe, I don't A #rules channel that basiclly any public server has, with permission that no on (except you of course) can write to it, but can still react in it (important). Now you need to get the message ID. Follow this guide to learn how get into developer mode. Once you have done that, go to the top-right corner and see were the reaction symbol is, next to it there is those 3 little dots, click on them then click on Copy ID. Once you got that ID run the command: setuprulesmessage [ID] But instead of [ID] you would put the ID we copyed. Example: setuprulesmessage 487951616666763274","title":"Message"},{"location":"server-setup/rulereaction/#choosing-an-emoji","text":"Once you have done that now its time for our emoji. Go to this site and pick out an emoji. For this example I will choose \ud83d\ude04(grinning face with smiling eyes) After that you need to run setupruleemoji [emoji] So mine would be setupruleemoji \ud83d\ude04 The emoji can't be the one in the Discord format, it must be unicode! \ud83d\ude04 would acually be :simle: in Discord but due to way the bot works :simle: won't work! The bot does check for this and will tell you! It is allso a good idea to put in that message that you need to react to this message with this emoji. E.G: React with \ud83d\ude04 to gain access to the server once you have read the rules!","title":"Choosing an emoji"},{"location":"server-setup/rulereaction/#setting-up-an-role","text":"The second last thing is to set up a role. Create a new role like normal, but make it like a generic role. So you know something like that normally only normal people get. Now save that and change the @everyone role to only access certain channels, say only the #welcome channel and the #rules channel (The one with the message) and allow them to react in the #rules channel(or whatever its called for you) Make sure to allow the new role to access the channel you want them to! This example it will be called Member Once you have your role done that do the command: setuprulerole [role] Example: setuprulerole Member","title":"Setting up an role"},{"location":"server-setup/rulereaction/#enabling-disabling-rule-reaction","text":"To enable the rule reaction feature, you need to have done the previous steps, after that do the command: togglerulereaction Assuming everything is correct it all should work. If a new user joins that should only have access to the channels that you specified until they react on that message with that specific emoji. If you want to disable this feature just run the same command again.","title":"Enabling / Disabling rule reaction"},{"location":"server-setup/welcomemessage/","text":"Pootis-Bot can have a custom welcome and goodbye message. Setting welcome message To set the welcome message use the command setupwelcomemessage [message] . Example: setupwelcomemessage Hello and welcome! You can also use [user] and [server] in the message to metion the user and put in the current server name. Example: setupwelcomemessage Hello [user]! Thanks for joining [server]! Please check out the rules first then enjoy your stay This would produce something that looks like this: Setting goodbye message To set the goodbye message use the command setupgoodbyemessage [message] Example: setupgoodbyemessage Goodbye! Once again there is [user] but there is NO [server] Example: setupgoodbyemessage Goodbye [user]. We hope you enjoyed your stay. This would produce something that looks like this: Enabling / Disabling welcome message and setting the channel To enable the welcome message you need to use the command togglewelcomemessage [channel] . If you haven't added a channel yet you will need to enter a channel name. If you have allready added a channel it will use that assuming that channel still exist. Example: If current the messages are DISABLED and no channel has been added then you would do: togglewelcomemessage welcome This would enable it and set it to the channel to welcome If I wanted to disable it then I would do: togglewelcomemessage But if wanted to enable it again and set to the same channel all I would have to do is: togglewelcomemessage","title":"Welcome & Goodbye Message"},{"location":"server-setup/welcomemessage/#setting-welcome-message","text":"To set the welcome message use the command setupwelcomemessage [message] . Example: setupwelcomemessage Hello and welcome! You can also use [user] and [server] in the message to metion the user and put in the current server name. Example: setupwelcomemessage Hello [user]! Thanks for joining [server]! Please check out the rules first then enjoy your stay This would produce something that looks like this:","title":"Setting welcome message"},{"location":"server-setup/welcomemessage/#setting-goodbye-message","text":"To set the goodbye message use the command setupgoodbyemessage [message] Example: setupgoodbyemessage Goodbye! Once again there is [user] but there is NO [server] Example: setupgoodbyemessage Goodbye [user]. We hope you enjoyed your stay. This would produce something that looks like this:","title":"Setting goodbye message"},{"location":"server-setup/welcomemessage/#enabling-disabling-welcome-message-and-setting-the-channel","text":"To enable the welcome message you need to use the command togglewelcomemessage [channel] . If you haven't added a channel yet you will need to enter a channel name. If you have allready added a channel it will use that assuming that channel still exist. Example: If current the messages are DISABLED and no channel has been added then you would do: togglewelcomemessage welcome This would enable it and set it to the channel to welcome If I wanted to disable it then I would do: togglewelcomemessage But if wanted to enable it again and set to the same channel all I would have to do is: togglewelcomemessage","title":"Enabling / Disabling welcome message and setting the channel"}]}